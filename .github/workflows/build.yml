name: Build APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9' # შეგიძლიათ შეცვალოთ საჭირო Python ვერსიით

      - name: Cache Buildozer global directory
        uses: actions/cache@v3
        with:
          path: .buildozer_global
          key: buildozer-global-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

      - name: Cache .buildozer directory
        uses: actions/cache@v3
        with:
          path: .buildozer
          key: buildozer-${{ runner.os }}-${{ env.date }}-${{ hashFiles('buildozer.spec') }}

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libffi-dev libssl-dev
          sudo apt install -y build-essential libsqlite3-dev
          sudo apt install -y zlib1g-dev libgmp-dev default-jdk
          pip install --upgrade pip
          pip install buildozer cython

      - name: Build APK with Buildozer
        run: |
          sed -i 's/python3==3.7.6/python3==3.9/' buildozer.spec # შეცვალეთ საჭირო Python ვერსიით
          sed -i 's/hostpython3==3.7.6/hostpython3==3.9/' buildozer.spec # შეცვალეთ საჭირო ვერსიით
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: bin/*.apk

